rd:
  postgresql:
    enabled: true
  rd-user-profile-api:
    enabled: true
  rd-professional-api:
    enabled: true
  rpe-service-auth-provider:
    enabled: true
  #rd-profile-sync:
    #enabled: true

rd-user-profile-api:
  java:
    applicationPort: 8091
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-rd-user-profile-api"
    #aadIdentityName: rd
    image: 'hmctspublic.azurecr.io/rd/user-profile-api:latest'
    environment:
      POSTGRES_HOST: "{{ tpl .Values.global.postgresqlHostName $}}"
      POSTGRES_NAME: "dbuserprofile"
      POSTGRES_USERNAME: "{{ .Values.global.postgresqlUsername}}"
      POSTGRES_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      POSTGRES_CONNECTION_OPTIONS: "?sslmode=allow"
      S2S_URL: "{{ tpl .Values.global.s2sUrl $}}"
      S2S_SECRET: AAAAAAAAAAAAAAAA
      IDAM_URL: "{{ .Values.global.idamApiUrl }}"
      AUTH_IDAM_CLIENT_BASEURL: "https://idam-api.{{ .Values.global.environment }}.platform.hmcts.net"


rd-professional-api:
  java:
    applicationPort: 8091
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-rd-professional-api"
    #aadIdentityName: rd
    image: 'hmctspublic.azurecr.io/rd/user-profile-api:latest'
    environment:
      POSTGRES_HOST: "{{ tpl .Values.global.postgresqlHostName $}}"
      POSTGRES_NAME: "dbrefdata"
      POSTGRES_USERNAME: "{{ .Values.global.postgresqlUsername}}"
      POSTGRES_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      POSTGRES_CONNECTION_OPTIONS: "?sslmode=allow"
      S2S_URL: "{{ tpl .Values.global.s2sUrl $}}"
      S2S_SECRET: AAAAAAAAAAAAAAAA
      IDAM_URL: "{{ .Values.global.idamApiUrl }}"
      AUTH_IDAM_CLIENT_BASEURL: https://idam-api.{{ .Values.global.environment }}.platform.hmcts.net
      USER_PROFILE_URL: http://rd-user-profile-api-{{ .Values.global.environment }}.platform.hmcts.net
      CCD_URL: https://ccd-user-profile-api-{{ .Values.global.environment }}.platform.hmcts.net

rpe-service-auth-provider:
  java:
    ingressHost: ""
    image: hmctspublic.azurecr.io/rpe/service-auth-provider:latest
    releaseNameOverride: "{{ .Release.Name }}-s2s"
    #readinessDelay: 180
    #livenessDelay: 180
    #keyVaults:
    environment:
      TESTING_SUPPORT_ENABLED: 'true'
      MICROSERVICEKEYS_RD_USER_PROFILE_API: AAAAAAAAAAAAAAAA
      MICROSERVICEKEY_RD_PROFESSIONAL_API: AAAAAAAAAAAAAAAA

#      MICROSERVICEKEYS_CCD_ADMIN: AAAAAAAAAAAAAAAA
#      MICROSERVICEKEYS_CCD_DATA: AAAAAAAAAAAAAAAA
#      MICROSERVICEKEYS_CCD_DEFINITION: AAAAAAAAAAAAAAAA
#      MICROSERVICEKEYS_CCD_GW: AAAAAAAAAAAAAAAA
#      MICROSERVICEKEYS_CCD_PS: AAAAAAAAAAAAAAAA

global:
  devMode: true
  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  idamApiUrl: ""
  idamWebUrl: ""
  s2sUrl: "http://{{ .Release.Name }}-s2s"
  postgresqlHostName: "{{ .Release.Name }}-postgresql"
postgresql:
  # Due to stability issues in the Preview environment, please disable persistance in the consuming chart for the Preview environment.
  persistence:
    enabled: false
  resources:
    requests:
      cpu: 25m

  initdbScripts:
    init.sql: |-
      CREATE DATABASE "dbuserprofile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;

  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  postgresqlDatabase: rd
